# Project MapIt.py
    >>> import webbrowser
    >>> webbrowser.open('https://inventwithpython.com/')
    True

Downloading Files From the Web With the Requests Module:
    Downloading a Web Page with the requests.get() Function:
        >>> import requests
        >>> res = requests.get('https://automatetheboringstuff.com/files/rj.txt')
        >>> type(res)
        <class 'requests.models.Response'>
        >>> res.status_code == requests.codes.ok
        True
        >>> len(res.text)
        178978
        >>> print(res.text[:250])
        The Project Gutenberg EBook of Romeo and Juliet, by William Shakespeare

        This eBook is for the use of anyone anywhere at no cost and with
        almost no restrictions whatsoever.  You may copy it, give it away or
        re-use it under the terms of the Project

        >>> res = requests.get('https://inventwithpython.com/page_that_does_not_exist')
        >>> res.raise_for_status()
        Traceback (most recent call last):
        File "<stdin>", line 1, in <module>
        File "C:\Users\cj917\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.7_qbz5n2kfra8p0\LocalCache\local-packages\Python37\site-packages\requests\models.py", line 940, in raise_for_status
        raise HTTPError(http_error_msg, response=self)
        requests.exceptions.HTTPError: 
        404 Client Error: Not Found for url:
        https://inventwithpython.com/page_that_does_not_exist

    Saving Downloaded Files to the Hard Drive:
        >>> import requests
        >>> res = requests.get('https://automatetheboringstuff.com/files/rj.txt')
        >>> res.raise_for_status()
        >>> playFile = open('RomeoAndJuliet.txt', 'wb')
        >>> for chunk in res.iter_content(100000):
                playFile.write(chunk)
        100000
        78981
        >>> playFile.close()
    
    Creating a BeautifulSoup Object from HTML:
        >>> import requests, bs4
        >>> res = requests.get('https://nostarch.com')
        >>> res.raise_for_status()
        >>> noStarchSoup = bs4.BeautifulSoup(res.text, 'html.parser')
        >>> type(noStarchSoup)
        <class 'bs4.BeautifulSoup'> 

        >>> exampleFile = open('example.html')
        >>> exampleSoup = bs4.BeautifulSoup(exampleFile, 'html.parser')
        >>> type(exampleSoup)
        <class 'bs4.BeautifulSoup'>

    Finding an Element with the select() Method:
        >>> import bs4
        >>> exampleFile = open('example.html')
        >>> exampleSoup = bs4.BeautifulSoup(exampleFile.read(), 'html.parser')
        >>> elems = exampleSoup.select('#author')
        >>> type(elems) # elems is a list of tag objects
        <class 'bs4.element.ResultSet'>
        >>> len(elems)
        1
        >>> type(elems[0])
        <class 'bs4.element.Tag'>
        >>> str(elems[0])
        '<span id="author">Al Sweigart</span>'
        >>> elems[0].getText()
        'Al Sweigart'
        >>> elems[0].attrs
        {'id': 'author'}

        >>> pElems = exampleSoup.select('p')
        >>> str(pElems[0])
        '<p>Download my <strong>Python</strong> book from <a href="http://inventwithpython.com">my website</a>.</p>'
        >>> pElems[0].getText()
        'Download my Python book from my website.'
        >>> str(pElems[1])
        '<p class="slogan">Learn Python the easy way!</p>'
        >>> pElems[1].getText()
        'Learn Python the easy way!'
        >>> str(pElems[2])
        '<p>By <span id="author">Al Sweigart</span></p>'
        >>> pElems[2].getText()
        'By Al Sweigart'

    Getting Data from an Element's Attributes:
        >>> import bs4
        >>> soup = bs4.BeautifulSoup(open('example.html'), 'html.parser')
        >>> spanElem = soup.select('span')[0]
        >>> str(spanElem)
        '<span id="author">Al Sweigart</span>'
        >>> spanElem.get('id')
        'author'
        >>> spanElem.get('some_nonexistent_addr') == None
        True
        >>> spanElem.attrs
        {'id': 'author'}

Controlling the Browser with the Selenum Module:
    Starting a selenium-Controlled Browser:
        >>> from selenium import webdriver
        >>> browser = webdriver.Firefox()
        >>> type(browser)
        <class 'selenium.webdriver.firefox.webdriver.WebDriver'>
        >>> browser.get('https://inventwithpython.com')

    Clicking the Page:
        >>> from selenium import webdriver
        >>> browser = webdriver.Firefox()
        >>> browser.get('https://inventwithpython.com')
        >>> linkElem = browser.find_element_by_link_text('Read Online for Free')
        >>> type(linkElem)
        <class 'selenium.webdriver.remote.webelement.FirefoxWebElement'>
        >>> linkElem.click() 
    
    Filling Out and Submitting Forms:
        >>> from selenium import webdriver
        >>> browser = webdriver.Firefox()
        >>> browser.get('https://login.metafilter.com')
        >>> userElem = browser.find_element_by_id('user_name)
        >>> userElem.send_keys('your_real_username_here')
        >>> passwordElem = browser.find_element_by_id('user_pass')
        >>> passwordElem.send_keys('your_real_password_here')
        >>> passwordElem.submit()

    Sending Special Keys:
        >>> from selenium import webdriver
        >>> from selenium.webdriver.common.keys import Keys
        >>> browser = webdriver.Firefox()
        >>> browser.get('https://nostarch.com')
        >>> htmlElem = browser.find_element_by_tag_name('html')
        >>> htmlElem.send_keys(Keys.END)     
        >>> htmlElem.send_keys(Keys.HOME) 


